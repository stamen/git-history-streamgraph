{"version":3,"file":"bundle.js","sources":["../src/transformData.js","../src/index.js"],"sourcesContent":["import {\n  timeParse,\n  stack,\n  extent,\n  stackOffsetWiggle,\n  stackOrderInsideOut,\n} from 'd3';\nimport { blur } from 'array-blur';\n\nconst parseDate = timeParse('%Y-%m-%d');\n\nconst layer = (d) => d.repo;\n\nexport const transformData = (data) => {\n  const layers = Object.keys(data.repositories);\n  const dates = data.dates.map((d) => parseDate(d));\n\n  const dataBylayer = new Map();\n\n  for (let layer of layers) {\n    const layerData = data.repositories[layer];\n\n    // Apply smoothing\n    const smoothedLayerData = blur().radius(12)(layerData);\n\n    dataBylayer.set(layer, smoothedLayerData);\n  }\n\n  const transformedData = [];\n  dates.forEach((date, i) => {\n    const row = { date };\n    for (let layer of layers) {\n      row[layer] = dataBylayer.get(layer)[i];\n    }\n    transformedData.push(row);\n  });\n\n  const stackedData = stack()\n    .offset(stackOffsetWiggle)\n    .order(stackOrderInsideOut)\n    .keys(layers)(transformedData);\n\n  return { dates, stackedData };\n};\n","import {\n  json,\n  scaleTime,\n  extent,\n  max,\n  min,\n  scaleLinear,\n  area,\n  select,\n  scaleOrdinal,\n  hcl,\n  randomNormal,\n  randomLcg,\n  axisTop,\n  axisBottom,\n  ascending,\n} from 'd3';\nimport { areaLabel } from 'd3-area-label';\nimport { transformData } from './transformData';\n\nconst dataURL = './aggregatedData.json';\nconst width = window.innerWidth;\nconst height = window.innerHeight;\n\nconst margin = { top: 20, right: 0, bottom: 20, left: 20 };\nconst ticks = 20;\n\nconst innerWidth = width - margin.left - margin.right;\nconst innerHeight = height - margin.top - margin.bottom;\n\nconst xValue = (d) => d.date;\n\nconst render = ({ dates, stackedData }) => {\n  const xScale = scaleTime().domain(extent(dates)).range([0, innerWidth]);\n\n  const yScale = scaleLinear()\n    .domain([\n      min(stackedData, (d) => min(d, (d) => d[0])),\n      max(stackedData, (d) => max(d, (d) => d[1])),\n    ])\n    .range([innerHeight, 0]);\n\n  const areaGenerator = area()\n    .x((d) => xScale(d.data.date))\n    .y0((d) => yScale(d[0]))\n    .y1((d) => yScale(d[1]));\n\n  const svg = select('body')\n    .append('svg')\n    .attr('width', width)\n    .attr('height', height);\n\n  const g = svg\n    .append('g')\n    .attr('transform', `translate(${margin.left},${margin.top})`);\n\n  const random = randomNormal.source(randomLcg(0.5))(30, 10);\n\n  const colorScale = scaleOrdinal().range(\n    stackedData.map((country, i) => {\n      const t = i / stackedData.length;\n      return hcl(t * 360, 50, random());\n    })\n  );\n\n  g.append('g').call(\n    axisTop(xScale).tickSize(-innerHeight).tickPadding(6).ticks(ticks)\n  );\n  g.append('g')\n    .attr('transform', `translate(0, ${innerHeight})`)\n    .call(axisBottom(xScale).tickSize(0).tickPadding(5).ticks(ticks))\n    .selectAll('line')\n    .remove();\n\n  // Add a black \"envelope\" as a backdrop behind the layers,\n  // so that we don't get undesirable artifacts where the\n  // tick lines are slightly visible in the cracks between layers.\n  stackedData.sort((a, b) => ascending(a.index, b.index));\n  const first = stackedData[0];\n  const last = stackedData[stackedData.length - 1];\n  const outlinePadding = 0.01;\n  const envelope = first.map((d, i) =>\n    Object.assign([d[0] - outlinePadding, last[i][1] + outlinePadding], {\n      data: d.data,\n    })\n  );\n  g.append('path').attr('d', areaGenerator(envelope));\n\n  g.append('g')\n    .selectAll('path')\n    .data(stackedData)\n    .enter()\n    //    .append('a')\n    //    .attr('href', (d) => `https://github.com/stamen/${d.key}`)\n    //    .attr('target', '_blank')\n    .append('path')\n    .attr('class', 'area')\n    .attr('d', areaGenerator)\n    .attr('fill', (d) => colorScale(d.key))\n    .append('title')\n    .text((d) => d.key);\n\n  const labels = g.append('g').selectAll('text').data(stackedData);\n\n  labels\n    .enter()\n    .append('text')\n    .attr('class', 'area-label')\n    .merge(labels)\n    .text((d) => d.key)\n    .attr('transform', areaLabel(areaGenerator));\n};\n\n// Load the data.\njson(dataURL).then((data) => {\n  render(transformData(data));\n});\n"],"names":["timeParse","blur","stack","stackOffsetWiggle","stackOrderInsideOut","scaleTime","extent","scaleLinear","min","max","area","select","randomNormal","randomLcg","scaleOrdinal","hcl","axisTop","axisBottom","ascending","areaLabel","json"],"mappings":"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"}